// Generated by Dagger (https://dagger.dev).
package com.demo.suresh.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesHttpLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  private final AppModule module;

  public AppModule_ProvidesHttpLoggingInterceptorFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return providesHttpLoggingInterceptor(module);
  }

  public static AppModule_ProvidesHttpLoggingInterceptorFactory create(AppModule module) {
    return new AppModule_ProvidesHttpLoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor providesHttpLoggingInterceptor(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.providesHttpLoggingInterceptor());
  }
}
